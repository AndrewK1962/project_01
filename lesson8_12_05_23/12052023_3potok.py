# -*- coding: utf-8 -*-
"""12052023_3potok.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1el7CJy7r8cg0uWXVALa1R3XkEfgSWAHt
"""

from random import randint
# Экспоненциальный поиск
def create_list():
  n = 10
  arr = []
  for i in range (n):
    arr.append(randint(1,99))
  return arr


def binary_search(arr,x):
  low = 0
  high = len(arr) - 1
  index = -1
  while (low <= high) and (index == -1):
    mid = (low + high) // 2
    if arr[mid] == x:
      index = mid
    else:
      if x < arr[mid]:
        high = mid - 1
      else:
        low = mid + 1
  return index


def exponential_search(arr,x):
  if arr[0] == x:
    return 0
  index = 1
  while index < len(arr) and arr[index] <= x:
    index = index * 2
  return binary_search( arr[:min(index,len(arr))], x)

data = create_list()
data.sort()
print (data)
value = int(input("Введи число: "))

result = exponential_search(data,value)

if result != -1:
  print ("Идеск искомого элемента", result)
else:
  print ("Элемента нет в массиве")

from random import randint
import math

# jump поиск
def create_list():
  n = 10
  arr = []
  for i in range (n):
    arr.append(randint(1,99))
  return arr

def jump_search(arr,x):
  lenght = len(arr)
  jump = int(math.sqrt(lenght))
  left = 0
  right = 0
  while left < lenght and arr[left] <= x:
    right = min(lenght-1, left + jump)
    if arr[left] <= x and arr[right] >= x:
      break
    left += jump
  if left >= lenght or arr[left] > x:
    return -1
  right = min(lenght - 1,right)
  i = left
  while i <= right and arr[i] <= x:
    if arr[i] == x:
      return i
    i +=1
  return -1

data = create_list()
data.sort()
print (data)
value = int(input("Введи число: "))

result = jump_search(data,value)

if result != -1:
  print ("Идеск искомого элемента", result)
else:
  print ("Элемента нет в массиве")

"""index = low + [(value-arr[low])*(high-low) / (arr[high]-arr[low])]"""

# Интерполяционный поиск
from random import randint

def create_list():
  n = 10
  arr = []
  for i in range (n):
    arr.append(randint(1,99))
  return arr
  
def interpolation_search(arr,x):
  low = 0
  high = len(arr)-1
  while low <= high and x >= arr[low] and x <= arr[high]:
    index = low + int(((float(high-low)/(arr[high]-arr[low])) * (x-arr[low])))
    if arr[index] == x:
      return index
    if arr[index] < x:
      low = index + 1
    else:
      high = index - 1
  return -1
  


data = create_list()
data.sort()
print (data)
value = int(input("Введи число: "))

result = interpolation_search(data,value)

if result != -1:
  print ("Идеск искомого элемента", result)
else:
  print ("Элемента нет в массиве")

# Задача 3

import os

def get_paths(path ='.'):
  for name in os.listdir(path):
    abs_path = os.path.abspath(os.path.join(path,name))
    yield abs_path
    if os.path.isdir(abs_path) is True:
      yield from get_paths(abs_path)

for i in get_paths('Ранхигс'):
  print (i)

# Задача 4

import os

def get_paths(path ='.'):
  for name in os.listdir(path):
    abs_path = os.path.abspath(os.path.join(path,name))
    if os.path.isfile(abs_path) is True:
      yield abs_path
    elif os.path.isdir(abs_path) is True:
      yield from get_paths(abs_path)



for i in get_paths('Ранхигс'):
  print (i)

print (type(get_paths('Ранхигс')))

print(list(get_paths('Ранхигс')))